pred_h_gam<-predict.gam(h_gam, newdata = eva, type = "response")
h_cor_gam<-cor(pred_h_gam, eva$veg_height, method = "spearman")
#GBM
h_gbm<-gbm(formula = veg_height~mesotopo+soil_moist+soil_temp+soil_ph, data=data,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(h_gbm, plot.it = F, method = "OOB")
pred_h_gbm<-predict.gbm(h_gbm,newdata = eva, best.iter, type = "response")
h_cor_gbm<-cor(pred_h_gbm, eva$veg_height, method = "spearman")
}
compared_model_h=cbind.data.frame(h_cor_glm, h_cor_gam, h_cor_gbm)
}
compared_model_h
data<- read.csv("C:/Users/oyeda/Desktop/MODELLING_PHYSICAL_GEOGRAPHY/assignment3/Data-20171114 (1)/saana.csv" ,sep=";")
# Use the caTools package to extract the AUC values and compare them
#library(caTools)
#library(mgcv)
#library(gbm)
#number of times to repeat the models
{rep<-10
h_auc_glm<-auc_gam<-h_auc_gbm<-c()
for (i in 1:rep){
#print(i)
#sample all the rows, and keep 70%(0.7)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]   #get the 70% rows for calibration
eva<- data[-rand_sam,]  #get the remaining 30% for evaluation
#create the glm for veg_height occurences
h_glm<-glm(veg_height~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="gaussian")
pred_h_glm<-predict.glm(h_glm, newdata = eva, type = "response")
h_cor_glm<-cor(pred_h_glm, eva$veg_height, method = "spearman")
#GAM
h_gam<-gam(veg_height~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="gaussian")
pred_h_gam<-predict.gam(h_gam, newdata = eva, type = "response")
h_cor_gam<-cor(pred_h_gam, eva$veg_height, method = "spearman")
#GBM
h_gbm<-gbm(formula = veg_height~mesotopo+soil_moist+soil_temp+soil_ph, data=data,
distribution = "gaussian",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(h_gbm, plot.it = F, method = "OOB")
pred_h_gbm<-predict.gbm(h_gbm,newdata = eva, best.iter, type = "response")
h_cor_gbm<-cor(pred_h_gbm, eva$veg_height, method = "spearman")
}
compared_model_h=cbind.data.frame(h_cor_glm, h_cor_gam, h_cor_gbm)
}
#comparison between the corelation between predicted and observed vegetation height of the models
compared_model_h
{rep<-7
vspr_auc_glm<-c()
vspr_auc_gam<-c()
vspr_auc_gbm<-c()
for (i in 1:rep){
#print(i)
#sample all the rows, and keep 70%(0.7)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]   #get the 70% rows for calibration
eva<- data[-rand_sam,]  #get the remaining 30% for evaluation
#create the glm for veg_height occurences
vspr_glm<-glm(vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vspr_glm<-predict.glm(vspr_glm, newdata = eva, type = "response")
vspr_cor_glm<-cor(pred_vspr_glm, eva$vasc_spr, method = "spearman")
#GAM
vspr_gam<-gam(vasc_spr~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vspr_gam<-predict.gam(vspr_gam, newdata = eva, type = "response")
vspr_cor_gam<-cor(pred_vspr_gam, eva$vasc_spr, method = "spearman")
#GBM
vspr_gbm<-gbm(formula = vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=data,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(vspr_gbm, plot.it = F, method = "OOB")
pred_vspr_gbm<-predict.gbm(vspr_gbm,newdata = eva, best.iter, type = "response")
vspr_cor_gbm<-cor(pred_vspr_gbm, eva$vasc_spr, method = "spearman")
}
compared_model_vspr=cbind.data.frame(vspr_cor_glm, vspr_cor_gam, vspr_cor_gbm)
}
compared_model_vspr
mesotopo2 <- seq(min(mesotopo), max(mesotopo), 4)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
#This is the first method makes the prediction without classifying the mesotopography
#GAM
gam_moist <- gam(soil_moist~s(mesotopo, k=3), data = data, family = "gaussian")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
#This is the first method makes the prediction without classifying the mesotopography
#GAM
gam_moist <- gam(soil_moist~s(mesotopo, k=3), data = data, family = "gaussian")
summary(gam_moist)
plot(gam_moist)
mesotopo2 <- seq(min(mesotopo), max(mesotopo), 4)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
plot(gam_moist)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
gam_temp<- gam(soil_temp~s(mesotopo, k=3), data = data, family = "gaussian")
summary(gam_temp)
plot(gam_temp)
pred.gam_temp <- predict.gam(gam_temp, newdata, type="response")
plot(mesotopo, soil_temp, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_temp, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
gam_temp<- gam(soil_temp~s(mesotopo, k=3), data = data, family = "gaussian")
plot(gam_moist)
#the values at the valley bottom, mid-slope and ridgte-top
mesotopo2 <- seq(min(mesotopo), max(mesotopo), 0.01)
mesotopo3<-c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
mesotopo3<-c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo3)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
#the values at the valley bottom, mid-slope and ridgte-top
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
plot(data$mesotopo, data$soil_moist, pch=19, cex=0.2, col="grey",type="n")
plot(data$mesotopo, data$soil_moist, pch=19, cex=0.2, col="grey",type="p")
plot(data$mesotopo, data$soil_moist)
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
#the values at the valley bottom, mid-slope and ridgte-top
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
#the values at the valley bottom, mid-slope and ridge-top
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
s(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="green")
par(mfrow=c(1,2))
plot(gam_moist)
#the values at the valley bottom, mid-slope and ridge-top
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="green")
par(mfrow=c(1,2))
plot(gam_moist, main = "soil moisture response curve")
par(mfrow=c(1,2))
plot(gam_moist, main = "soil moisture")
#the values at the valley bottom, mid-slope and ridge-top
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange", main="soil moisture")
plot(mesotopo, soil_temp, pch=19, cex=0.2, col="grey",type="n", main = "soil temp vs mesotopo")
topo<- data.frame(ncol=5, nrow=3)
View(topo)
View(topo)
topo<- data.frame(NCOL=5, NROW=3)
topo<-matrix(ncol = 5, nrow = 3)
topo<- data.frame(topo)
row.names(topo)<- c("valley_bottom", "mid-slope", "ridge-top")
colnames(topo)<-c("soil_moist", "soil_temp", "soil_ph", "vasc_spr", "veg_height")
#library(mgcv)
data<- read.csv("C:/Users/oyeda/Desktop/MODELLING_PHYSICAL_GEOGRAPHY/assignment3/Data-20171114 (1)/saana.csv"
,sep=";")
attach(data)
#This is the first method makes the prediction without classifying the mesotopography
#GAM
##Soil moisture
gam_moist <- gam(soil_moist~s(mesotopo, k=3), data = data, family = "gaussian")
summary(gam_moist)
par(mfrow=c(1,2))
plot(gam_moist, main = "soil moisture")
#the values at the valley bottom, mid-slope and ridge-top
mesotopo2 <- c(1,5,10)
newdata <- data.frame(mesotopo=mesotopo2)
pred.gam_moist <- predict.gam(gam_moist, newdata, type="response")
plot(mesotopo, soil_moist, pch=19, cex=0.2, col="grey",type="n", main="soil moisture")
lines(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_moist, lty=1,lwd= 2,col="green")
#soil temperature
gam_temp<- gam(soil_temp~s(mesotopo, k=3), data = data, family = "gaussian")
summary(gam_temp)   #summary soil temperature
par(mfrow=c(1,2))
plot(gam_temp, main="soil temperature") #response curve
pred.gam_temp <- predict.gam(gam_temp, newdata, type="response")
plot(mesotopo, soil_temp, pch=19, cex=0.2, col="grey",type="n", main = "soil temp vs mesotopo")
lines(mesotopo2, pred.gam_temp, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_temp, lty=1,lwd= 2,col="orange")
#soil pH
gam_ph<- gam(soil_ph~s(mesotopo, k=3), data = data, family = "gaussian")
summary(gam_ph)   #summary soil_pH
par(mfrow=c(1,2))
plot(gam_ph)  #response curve
pred.gam_ph <- predict.gam(gam_ph, newdata, type="response")
plot(mesotopo, soil_ph, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_ph, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_ph, lty=1,lwd= 2,col="orange")
par(mfrow=c(1,2))
gam_vh<- gam(veg_height~s(mesotopo, k=3), data = data, family = "poisson")
summary(gam_vh)
plot(gam_ph)
pred.gam_ph <- predict.gam(gam_ph, newdata, type="response")
plot(mesotopo, soil_ph, pch=19, cex=0.2, col="grey",type="n")
lines(mesotopo2, pred.gam_ph, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_ph, lty=1,lwd= 2,col="orange")
#Vascular species richness
gam_vaspr<- gam(vasc_spr~s( mesotopo, k=3), data = data, family = "poisson")
summary(gam_vaspr)
par(mfrow=c(1,2))
plot(gam_vaspr, main = "Vasc_Spr")
pred.gam_vaspr <- predict.gam(gam_vaspr, newdata, type="response")
plot(mesotopo, vasc_spr, pch=19, cex=0.2, col="grey",type="n", main = "Vasc_Spr vs mesotopo")
lines(mesotopo2, pred.gam_vaspr, lty=1,lwd= 2,col="orange")
points(mesotopo2, pred.gam_vaspr, lty=1,lwd= 2,col="orange")
###############################
#data$topo_level<-cut(mesotopo, breaks = c(0,4,7,10))
#levels(data$topo_level)<-c("valley-bottom","mid-slope","ridge-top")
val_bot<-data[mesotopo==1,]    #valley bottom
mid_sl<-data[mesotopo==5,]      #mid-slope
r_top<-data[mesotopo==10,]      #ridge-top
#create data frame to impute the modlled values at variouis topo gradients.
topo<-matrix(ncol = 5, nrow = 3)
topo<- data.frame(topo)
row.names(topo)<- c("valley_bottom", "mid-slope", "ridge-top")
colnames(topo)<-c("soil_moist", "soil_temp", "soil_ph", "vasc_spr", "veg_height")
#predicting the values at the valley bottom for the responses
vb1<- topo[1,1]<- mean(predict.gam(gam_moist, val_bot, type="response"))
vb2<- topo[1,2]<- mean(predict.gam(gam_temp, val_bot, type="response"))
vb3<- topo[1,3]<- mean(predict.gam(gam_ph, val_bot, type="response"))
vb4<- topo[1,4]<- mean(predict.gam(gam_vaspr, val_bot, type="response"))
vb5<- topo[1,5]<- mean(predict.gam(gam_vh, val_bot, type="response"))
#predicting the values at the mid-slope for the responses
ms1<- topo[2,1]<- mean(predict.gam(gam_moist, mid_sl, type="response"))
ms2<- topo[2,2]<- mean(predict.gam(gam_temp, mid_sl, type="response"))
ms3<- topo[2,3]<- mean(predict.gam(gam_ph, mid_sl, type="response"))
ms4<- topo[2,4]<- mean(predict.gam(gam_vaspr, mid_sl, type="response"))
ms5<- topo[2,5]<- mean(predict.gam(gam_vh, mid_sl, type="response"))
#predicting the values at the ridge-top for the responses
rt1<- topo[3,1]<- mean(predict.gam(gam_moist, r_top, type="response"))
rt2<- topo[3,2]<- mean(predict.gam(gam_temp, r_top, type="response"))
rt3<- topo[3,3]<- mean(predict.gam(gam_ph, r_top, type="response"))
rt4<- topo[3,4]<- mean(predict.gam(gam_vaspr, r_top, type="response"))
rt5<- topo[3,5]<- mean(predict.gam(gam_vh, r_top, type="response"))
#view the dataframe
topo
#see the boxplot
boxplot(topo)
#see the boxplot
boxplot(topo)
{rep<-7
vaspr_auc_glm<-c()
vaspr_auc_gam<-c()
vaspr_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
vaspr_glm<-glm(vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vaspr_glm<-predict.glm(vaspr_glm, newdata = eva, type = "response")
vaspr_auc_glm_p<-colAUC(pred_vaspr_glm, eva$vasc_spr, plotROC=F)
vaspr_auc_glm <- c(vaspr_auc_glm, vaspr_auc_glm_p[[1]])
#GAM
vaspr_gam<-gam(vasc_spr~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vaspr_gam<-predict.gam(vaspr_gam, newdata = eva, type = "response")
vaspr_auc_gam_p<-colAUC(pred_vaspr_gam, eva$Vasc_spr, plotROC=F)
vaspr_auc_gam <- c(vaspr_auc_gam, vaspr_auc_gam_p[[1]])
#GBM
vaspr_gbm<-gbm(formula = vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(vaspr_gbm, plot.it = T, method = "OOB")
pred_vaspr_gbm<-predict.gbm(vaspr_gbm,newdata = eva, best.iter, type = "response")
vaspr_auc_gbm_p<-colAUC(pred_vaspr_gbm, eva$Vasc_spr, plotROC = T)
vaspr_auc_gbm<- c(vaspr_auc_gbm, vaspr_auc_gbm_p[[1]])
}
compared_model_vaspr1=cbind.data.frame(vaspr_auc_glm, vaspr_auc_gam, vaspr_auc_gbm)
}
data<- read.csv("C:/Users/oyeda/Desktop/MODELLING_PHYSICAL_GEOGRAPHY/assignment3/Data-20171114 (1)/saana.csv"
,sep=";")
# Use the caTools package to extract the AUC values and compare them
library(caTools)
library(mgcv)
library(gbm)
attach(data)
{rep<-7
vaspr_auc_glm<-c()
vaspr_auc_gam<-c()
vaspr_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
vaspr_glm<-glm(vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vaspr_glm<-predict.glm(vaspr_glm, newdata = eva, type = "response")
vaspr_auc_glm_p<-colAUC(pred_vaspr_glm, eva$vasc_spr, plotROC=F)
vaspr_auc_glm <- c(vaspr_auc_glm, vaspr_auc_glm_p[[1]])
#GAM
vaspr_gam<-gam(vasc_spr~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vaspr_gam<-predict.gam(vaspr_gam, newdata = eva, type = "response")
vaspr_auc_gam_p<-colAUC(pred_vaspr_gam, eva$Vasc_spr, plotROC=F)
vaspr_auc_gam <- c(vaspr_auc_gam, vaspr_auc_gam_p[[1]])
#GBM
vaspr_gbm<-gbm(formula = vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(vaspr_gbm, plot.it = T, method = "OOB")
pred_vaspr_gbm<-predict.gbm(vaspr_gbm,newdata = eva, best.iter, type = "response")
vaspr_auc_gbm_p<-colAUC(pred_vaspr_gbm, eva$Vasc_spr, plotROC = T)
vaspr_auc_gbm<- c(vaspr_auc_gbm, vaspr_auc_gbm_p[[1]])
}
compared_model_vaspr1=cbind.data.frame(vaspr_auc_glm, vaspr_auc_gam, vaspr_auc_gbm)
}
{rep<-7
vaspr_auc_glm<-c()
vaspr_auc_gam<-c()
vaspr_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
vaspr_glm<-glm(vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vaspr_glm<-predict.glm(vaspr_glm, newdata = eva, type = "response")
vaspr_auc_glm_p<-colAUC(pred_vaspr_glm, eva$vasc_spr, plotROC=F)
vaspr_auc_glm <- c(vaspr_auc_glm, vaspr_auc_glm_p[[1]])
#GAM
vaspr_gam<-gam(vasc_spr~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vaspr_gam<-predict.gam(vaspr_gam, newdata = eva, type = "response")
vaspr_auc_gam_p<-colAUC(pred_vaspr_gam, eva$Vasc_spr, plotROC=F)
vaspr_auc_gam <- c(vaspr_auc_gam, vaspr_auc_gam_p[[1]])
#GBM
vaspr_gbm<-gbm(formula = vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(vaspr_gbm, plot.it = T, method = "OOB")
pred_vaspr_gbm<-predict.gbm(vaspr_gbm,newdata = eva, best.iter, type = "response")
vaspr_auc_gbm_p<-colAUC(pred_vaspr_gbm, eva$Vasc_spr, plotROC = T)
vaspr_auc_gbm<- c(vaspr_auc_gbm, vaspr_auc_gbm_p[[1]])
}
compared_model_vaspr1=cbind.data.frame(vaspr_auc_glm, vaspr_auc_gam, vaspr_auc_gbm)
}
vaspr_auc_glm<-c()
vaspr_auc_gam<-c()
vaspr_auc_gbm<-c()
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
vaspr_glm<-glm(vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vaspr_glm<-predict.glm(vaspr_glm, newdata = eva, type = "response")
vaspr_auc_glm_p<-colAUC(pred_vaspr_glm, eva$vasc_spr, plotROC=F)
vaspr_auc_glm <- c(vaspr_auc_glm, vaspr_auc_glm_p[[1]])
#GAM
vaspr_gam<-gam(vasc_spr~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vaspr_gam<-predict.gam(vaspr_gam, newdata = eva, type = "response")
vaspr_auc_gam_p<-colAUC(pred_vaspr_gam, eva$Vasc_spr, plotROC=F)
vaspr_auc_gam <- c(vaspr_auc_gam, vaspr_auc_gam_p[[1]])
{rep<-7
vaspr_auc_glm<-c()
vaspr_auc_gam<-c()
vaspr_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
vaspr_glm<-glm(vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vaspr_glm<-predict.glm(vaspr_glm, newdata = eva, type = "response")
vaspr_auc_glm_p<-colAUC(pred_vaspr_glm, eva$vasc_spr, plotROC=F)
vaspr_auc_glm <- c(vaspr_auc_glm, vaspr_auc_glm_p[[1]])
#GAM
vaspr_gam<-gam(vasc_spr~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vaspr_gam<-predict.gam(vaspr_gam, newdata = eva, type = "response")
vaspr_auc_gam_p<-colAUC(pred_vaspr_gam, eva$vasc_spr, plotROC=F)
vaspr_auc_gam <- c(vaspr_auc_gam, vaspr_auc_gam_p[[1]])
#GBM
vaspr_gbm<-gbm(formula = vasc_spr~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(vaspr_gbm, plot.it = T, method = "OOB")
pred_vaspr_gbm<-predict.gbm(vaspr_gbm,newdata = eva, best.iter, type = "response")
vaspr_auc_gbm_p<-colAUC(pred_vaspr_gbm, eva$vasc_spr, plotROC = T)
vaspr_auc_gbm<- c(vaspr_auc_gbm, vaspr_auc_gbm_p[[1]])
}
compared_model_vaspr1=cbind.data.frame(vaspr_auc_glm, vaspr_auc_gam, vaspr_auc_gbm)
}
{rep<-7
vaspr_auc_glm<-c()
vaspr_auc_gam<-c()
vaspr_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
vaspr_glm<-glm(vasc_spr~Empher_cover+mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="poisson")
pred_vaspr_glm<-predict.glm(vaspr_glm, newdata = eva, type = "response")
vaspr_auc_glm_p<-colAUC(pred_vaspr_glm, eva$vasc_spr, plotROC=F)
vaspr_auc_glm <- c(vaspr_auc_glm, vaspr_auc_glm_p[[1]])
#GAM
vaspr_gam<-gam(vasc_spr~s(Empher_cover, k=3)+  s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="poisson")
pred_vaspr_gam<-predict.gam(vaspr_gam, newdata = eva, type = "response")
vaspr_auc_gam_p<-colAUC(pred_vaspr_gam, eva$vasc_spr, plotROC=F)
vaspr_auc_gam <- c(vaspr_auc_gam, vaspr_auc_gam_p[[1]])
#GBM
vaspr_gbm<-gbm(formula = vasc_spr~Empher_cover+mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "poisson",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(vaspr_gbm, plot.it = F, method = "OOB")
pred_vaspr_gbm<-predict.gbm(vaspr_gbm,newdata = eva, best.iter, type = "response")
vaspr_auc_gbm_p<-colAUC(pred_vaspr_gbm, eva$vasc_spr, plotROC = F)
vaspr_auc_gbm<- c(vaspr_auc_gbm, vaspr_auc_gbm_p[[1]])
}
compared_model_vaspr2=cbind.data.frame(vaspr_auc_glm, vaspr_auc_gam, vaspr_auc_gbm)
}
compared_model_vaspr1
compared_model_vaspr2
wilcox.test(compared_model_vaspr1, compared_model_vaspr2)
wilcox.test(compared_model_vaspr1[,1], compared_model_vaspr2[,1])
wilcox.test(mean(compared_model_vaspr1[,1]), mean(compared_model_vaspr2[,1]))
wilcox.test(mean(compared_model_vaspr1[,1]), mean(compared_model_vaspr2[,1]))
wilcox.test(mean(compared_model_vaspr1[,2]), mean(compared_model_vaspr2[,2]))
wilcox.test(mean(compared_model_vaspr1[,3]), mean(compared_model_vaspr2[,3]))
{rep<-10   #number of replicatons of the sampling for the modelling
#create empoty lists´to imput the auc values later
sal_auc_glm<-sal_auc_gam<-sal_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
sal_glm<-glm(Salret~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="binomial")
pred_sal_glm<-predict.glm(sal_glm, newdata = eva, type = "response")
sal_auc_glm_p<-colAUC(pred_sal_glm, eva$Salret, plotROC=F)
sal_auc_glm <- c(sal_auc_glm, sal_auc_glm_p[[1]])
#GAM
sal_gam<-gam(Salret~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="binomial")
pred_sal_gam<-predict.gam(sal_gam, newdata = eva, type = "response")
sal_auc_gam_p<-colAUC(pred_sal_gam, eva$Salret, plotROC=T)
sal_auc_gam <- c(sal_auc_gam, sal_auc_gam_p[[1]])
#GBM
sal_gbm<-gbm(formula = Salret~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "bernoulli",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(sal_gbm, plot.it = F, method = "OOB")
pred_sal_gbm<-predict.gbm(sal_gbm,newdata = eva, best.iter, type = "response")
sal_auc_gbm_p<-colAUC(pred_sal_gbm, eva$Salret, plotROC = F)
sal_auc_gbm<- c(sal_auc_gbm, sal_auc_gbm_p[[1]])
}
compared_model_sal=cbind.data.frame(sal_auc_glm, sal_auc_gam, sal_auc_gbm)
}
#show the results
compared_model_sal
#the mean of the aucs values of the models
colMeans(compared_model_sal)
#compare the models
wilcox.test(sal_auc_glm, sal_auc_gam, paired = T)
wilcox.test(sal_auc_gam, sal_auc_gbm, paired = T)
{rep<-10   #number of replicatons of the sampling for the modelling
#create empoty lists´to imput the auc values later
sal_auc_glm<-sal_auc_gam<-sal_auc_gbm<-c()
for (i in 1:rep){
print(i)
rand_sam<-sample(1:nrow(data), size = 0.7*nrow(data) )
cal<- data[rand_sam,]
eva<- data[-rand_sam,]
sal_glm<-glm(Salret~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,family ="binomial")
pred_sal_glm<-predict.glm(sal_glm, newdata = eva, type = "response")
sal_auc_glm_p<-colAUC(pred_sal_glm, eva$Salret, plotROC=F)
sal_auc_glm <- c(sal_auc_glm, sal_auc_glm_p[[1]])
#GAM
sal_gam<-gam(Salret~s(mesotopo, k=3) + s(soil_moist, k=3) + s(soil_temp, k=3) +
s(soil_ph, k=3), data=cal,family ="binomial")
pred_sal_gam<-predict.gam(sal_gam, newdata = eva, type = "response")
sal_auc_gam_p<-colAUC(pred_sal_gam, eva$Salret, plotROC=F)
sal_auc_gam <- c(sal_auc_gam, sal_auc_gam_p[[1]])
#GBM
sal_gbm<-gbm(formula = Salret~mesotopo+soil_moist+soil_temp+soil_ph, data=cal,
distribution = "bernoulli",n.trees = 3000, shrinkage = 0.001, interaction.depth = 4)
best.iter<-gbm.perf(sal_gbm, plot.it = F, method = "OOB")
pred_sal_gbm<-predict.gbm(sal_gbm,newdata = eva, best.iter, type = "response")
sal_auc_gbm_p<-colAUC(pred_sal_gbm, eva$Salret, plotROC = F)
sal_auc_gbm<- c(sal_auc_gbm, sal_auc_gbm_p[[1]])
}
compared_model_sal=cbind.data.frame(sal_auc_glm, sal_auc_gam, sal_auc_gbm)
}
#show the results
compared_model_sal
boxplot(data$mesotopo, data$soil_moist)
boxplot(data$mesotopo, data$soil_moist)
boxplot(data$soil_moist)
